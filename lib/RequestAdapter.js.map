{"version":3,"sources":["../src/RequestAdapter.js"],"names":["RequestAdapter","instantsearchRequest","typesenseClient","searchByFields","facetFilters","adaptedResult","intermediateFacetFilters","flat","forEach","facetFilter","split","facetName","facetValue","push","Object","keys","map","facet","join","collections","indexName","documents","search","q","params","query","query_by","facet_by","facets","filter_by","_adaptFacetFilters","max_facet_values","maxValuesPerFacet","page"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;IAEaA,c;;;AACX,0BAAYC,oBAAZ,EAAkCC,eAAlC,EAAmDC,cAAnD,EAAmE;AAAA;AACjE,SAAKF,oBAAL,GAA4BA,oBAA5B;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACD;;;;uCAEkBC,Y,EAAc;AAC/B,UAAIC,aAAa,GAAG,EAApB;;AAEA,UAAI,CAACD,YAAL,EAAmB;AACjB,eAAOC,aAAP;AACD;;AAED,UAAMC,wBAAwB,GAAG,EAAjC,CAP+B,CAS/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAF,MAAAA,YAAY,CAACG,IAAb,GAAoBC,OAApB,CAA4B,UAAAC,WAAW,EAAI;AAAA,iCACTA,WAAW,CAACC,KAAZ,CAAkB,GAAlB,CADS;AAAA;AAAA,YAClCC,SADkC;AAAA,YACvBC,UADuB;;AAEzCN,QAAAA,wBAAwB,CAACK,SAAD,CAAxB,GACEL,wBAAwB,CAACK,SAAD,CAAxB,IAAuC,EADzC;AAEAL,QAAAA,wBAAwB,CAACK,SAAD,CAAxB,CAAoCE,IAApC,CAAyCD,UAAzC;AACD,OALD,EAlB+B,CAyB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,MAAAA,aAAa,GAAGS,MAAM,CAACC,IAAP,CAAYT,wBAAZ,EACbU,GADa,CACT,UAAAC,KAAK;AAAA,yBAAOA,KAAP,gBAAkBX,wBAAwB,CAACW,KAAD,CAAxB,CAAgCC,IAAhC,CAAqC,GAArC,CAAlB;AAAA,OADI,EAEbA,IAFa,CAER,MAFQ,CAAhB;AAIA,aAAOb,aAAP;AACD;;;;;;;;;;;iDAGQ,KAAKH,eAAL,CACJiB,WADI,CACQ,KAAKlB,oBAAL,CAA0BmB,SADlC,EAEJC,SAFI,GAGJC,MAHI,CAGG;AACNC,kBAAAA,CAAC,EACC,KAAKtB,oBAAL,CAA0BuB,MAA1B,CAAiCC,KAAjC,KAA2C,EAA3C,GACI,GADJ,GAEI,KAAKxB,oBAAL,CAA0BuB,MAA1B,CAAiCC,KAJjC;AAKNC,kBAAAA,QAAQ,EAAE,KAAKvB,cAAL,CAAoBe,IAApB,CAAyB,GAAzB,CALJ;AAMNS,kBAAAA,QAAQ,EAAE,CAAC,KAAK1B,oBAAL,CAA0BuB,MAA1B,CAAiCI,MAAlC,EAA0CrB,IAA1C,GAAiDW,IAAjD,CAAsD,GAAtD,CANJ;AAONW,kBAAAA,SAAS,EAAE,KAAKC,kBAAL,CACT,KAAK7B,oBAAL,CAA0BuB,MAA1B,CAAiCpB,YADxB,CAPL;AAUN2B,kBAAAA,gBAAgB,EAAE,KAAK9B,oBAAL,CAA0BuB,MAA1B,CAAiCQ,iBAV7C;AAWNC,kBAAAA,IAAI,EAAE,KAAKhC,oBAAL,CAA0BuB,MAA1B,CAAiCS,IAAjC,GAAwC;AAXxC,iBAHH,C","sourcesContent":["\"use strict\";\n\nexport class RequestAdapter {\n  constructor(instantsearchRequest, typesenseClient, searchByFields) {\n    this.instantsearchRequest = instantsearchRequest;\n    this.typesenseClient = typesenseClient;\n    this.searchByFields = searchByFields;\n  }\n\n  _adaptFacetFilters(facetFilters) {\n    let adaptedResult = \"\";\n\n    if (!facetFilters) {\n      return adaptedResult;\n    }\n\n    const intermediateFacetFilters = {};\n\n    // Need to transform:\n    // faceFilters = [[\"facet1:value1\", \"facet1:value2\"], \"facet2:value3\"]]\n    //\n    // Into this:\n    // intermediateFacetFilters = {\n    //     \"facet1\": [\"value1\", \"value2\"],\n    //     \"facet2\": [\"value1\", \"value2\"]\n    // }\n\n    facetFilters.flat().forEach(facetFilter => {\n      const [facetName, facetValue] = facetFilter.split(\":\");\n      intermediateFacetFilters[facetName] =\n        intermediateFacetFilters[facetName] || [];\n      intermediateFacetFilters[facetName].push(facetValue);\n    });\n\n    // Need to transform this:\n    // intermediateFacetFilters = {\n    //     \"facet1\": [\"value1\", \"value2\"],\n    //     \"facet2\": [\"value1\", \"value2\"]\n    // }\n    //\n    // Into this:\n    // facet1: [value1,value2] && facet2: [value1,value2]\n\n    adaptedResult = Object.keys(intermediateFacetFilters)\n      .map(facet => `${facet}: [${intermediateFacetFilters[facet].join(\",\")}]`)\n      .join(\" && \");\n\n    return adaptedResult;\n  }\n\n  async request() {\n    return this.typesenseClient\n      .collections(this.instantsearchRequest.indexName)\n      .documents()\n      .search({\n        q:\n          this.instantsearchRequest.params.query === \"\"\n            ? \"*\"\n            : this.instantsearchRequest.params.query,\n        query_by: this.searchByFields.join(\",\"),\n        facet_by: [this.instantsearchRequest.params.facets].flat().join(\",\"),\n        filter_by: this._adaptFacetFilters(\n          this.instantsearchRequest.params.facetFilters\n        ),\n        max_facet_values: this.instantsearchRequest.params.maxValuesPerFacet,\n        page: this.instantsearchRequest.params.page + 1\n      });\n  }\n}\n"],"file":"RequestAdapter.js"}